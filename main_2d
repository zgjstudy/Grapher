#include<bits/stdc++.h>
#include"Equalation.hpp"
#include "Grapher.h"

using namespace std;

int main()
{
	string input = "'z'='x'*'x'+'y'*'y'";

	std::vector<std::pair<std::string, int>> variable_order;//create variables
	variable_order.push_back(std::pair<std::string, double>(std::string("x"), 1));//order variables
	variable_order.push_back(std::pair<std::string, double>(std::string("y"), 2));
	variable_order.push_back(std::pair<std::string, double>(std::string("z"), 3));

	std::vector<std::pair<double, double>> variable_bound;//bound variables
	variable_bound.push_back(std::pair<double, double>(-1, 1));//for x
	variable_bound.push_back(std::pair<double, double>(-1, 1));//for y
	variable_bound.push_back(std::pair<double, double>(-1, 1));//for z

	Equalation equal(input);//instance of class Equalation
	equal.SetupSequence(variable_order);//initial set
	equal.SetupBound(variable_bound);
	std::vector < std::vector<double> > result = equal.GetPoints(0.1);//get points


	//for (auto iti = result.begin(); iti != result.end(); ++iti)//output
	//{
	//	for (auto itj = iti->begin(); itj != iti->end(); ++itj)
	//	{
	//		cout << *itj << "   ";
	//	}
	//	cout << std::endl;
	//}

	Grapher A(result,input);
	return 0;
}

